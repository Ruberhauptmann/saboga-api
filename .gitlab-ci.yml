stages:
  - test
  - build
  - publish

.base:
  image: python:3.12.0

.tests:
  extends: .base
  stage: test
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == "main"
  before_script:
    - pip install tox

Lint:
  extends: .tests
  script:
    - tox -e lint

Type check:
  extends: .tests
  script:
    - tox -e type

Test python3.12:
  extends: .tests
  script:
    - tox -e py312
  coverage: '/(?i)total.*? (100(?:\.0+)?\%|[1-9]?\d(?:\.\d+)?\%)$/'
  artifacts:
    when: always
    paths:
      - report.xml
      - coverage.xml
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

Build package:
  extends: .base
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - pip install poetry
  script:
    - poetry config repositories.gitlab ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
    - poetry build
    - poetry publish --repository gitlab --username gitlab-ci-token --password ${CI_JOB_TOKEN}

services:
  - docker:20-dind

Publish docker image:
  image: docker:20
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker pull sabogaapi:latest || true
    - docker build --cache-from sabogaapi:latest -t $CI_REGISTRY_IMAGE/sabogaapi:$CI_COMMIT_TAG -t $CI_REGISTRY_IMAGE/sabogaapi:latest .
    - docker push --all-tags $CI_REGISTRY_IMAGE/sabogaapi
  tags:
    - docker
