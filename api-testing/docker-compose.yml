services:
  reverse-proxy:
    container_name: traefik
    image: traefik:v3.0
    command:
      - "--api.dashboard=true"
      - "--providers.docker"
      - "--log.level=DEBUG"
      - "--providers.docker.network=saboga-reverse-proxy"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      - "--providers.file.directory=/etc/traefik/dynamic"
    labels:
      - "traefik.http.routers.dashboard.rule=Host(`traefik.localhost`)"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.whoami.entrypoints=websecure"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik-certs.yaml:/etc/traefik/dynamic/certs-traefik.yaml
      - ./certs/:/etc/certs/
    networks:
      - saboga-reverse-proxy

  saboga-api:
    image: saboga-api:latest
    build:
      context: ../
      dockerfile: api-testing/Dockerfile
    container_name: saboga-api
    labels:
      - "traefik.http.routers.saboga-api.rule=Host(`saboga.localhost`) && PathPrefix(`/api`)"
      - "traefik.http.routers.saboga-api.tls=true"
      - "traefik.docker.network=saboga-reverse-proxy"
      - "traefik.http.routers.saboga-api.middlewares=strip-api-prefix"
      - "traefik.http.middlewares.strip-api-prefix.stripPrefix.prefixes=/api"
    volumes:
      - ./static:/app/static
      - ./img:/app/img
    expose:
      - "8000"
    env_file:
      - .env
    depends_on:
      - reverse-proxy
    networks:
      - saboga-reverse-proxy
      - saboga-api
    develop:
      watch:
        - action: sync
          path: ../
          target: /app
          ignore:
            - ../.venv/
        - action: rebuild
          path: ../pyproject.toml

  saboga-database:
    image: mongo:jammy
    container_name: saboga-database
    env_file:
      - .env
    volumes:
      - ./init_db.sh:/docker-entrypoint-initdb.d/init_db.sh
      - ./dump:/dump
      - saboga_db_data:/data/db
    networks:
      - saboga-api

volumes:
  saboga_db_data:

networks:
  saboga-api:
    driver: bridge
    internal: true
  saboga-reverse-proxy:
    driver: bridge
    name: saboga-reverse-proxy
